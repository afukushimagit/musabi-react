/**
 落ちる水滴と点滅する光で秒を、両横で線と線を交差させた×印の位置で時間を表現。
 ひし形が溜まりきったら１分たったことになる。
 真ん中の水滴が溜まっていくひし形と、その周りの図形で隙間を作り、
 後ろからグラデーションになっている図形をのぞかせることで分数を表した。
 点滅する赤丸は、秒と分を6分割し、時間では目盛りが「ここからここまで動く」ことを示す。
 */

float Y=0.0;
float speed=0.0;
float kasokudo=0.3;//加速度
int count=0;
int  iSecondCurrent;
int X;

void setup()
{
  size(1000, 700);
  colorMode(RGB, 255, 255, 255, 1);
  frameRate(60);
  iSecondCurrent = second();
  X = 0;
}

void draw()
{
  noStroke();
  rectMode(CORNER);
  int s =second();
  int m =minute();
  int h =hour();
  println(h+":"+m+":"+s);//時刻確認用
  background(45, 75, 75);

  //分の描画
  for (int mi=0; mi<50; mi+=10)//分の表示の図形
  {
    fill(70-mi, 230-mi, 205-mi, 1-mi*(0.02));//グラデーション
    rect(200, 40-mi+10*m, 600, 10);
  }
  if (m<5)//分の図形の余韻
  {
    for (int mi=0; mi<50; mi+=10)
    {
      fill(70-mi, 230-mi, 205-mi, 1-mi*(0.02));
      rect(200, 640-mi+10*m, 600, 10);
    }
  }//ここまで余韻
  fill(30, 60, 60);//周りを台形と長方形で囲う
  float z=sqrt(50);
  rect(350, 650, 300, 60);
  rect(350, 0, 300, 50);
  quad(505, 150-z, 1000, 645-z, 1000, 0, 505, 0);
  quad(505, 550+z, 1000, 55+z, 1000, 700, 505, 700);
  quad(495, 150-z, 495, 0, 0, 0, 0, 645-z);
  quad(495, 550+z, 0, 55+z, 0, 700, 495, 700); //ここまで周り囲い

  //秒の描画
  count++;
  fill(30, 60, 60);//濃い青緑枠
  quad(500, 150, 700, 350, 500, 550, 300, 350);
  fill(45, 75, 75);//濃い青緑より少し薄い方の枠
  quad(500, 165, 685, 350, 500, 535, 315, 350);
  fill(225, 40, 40);//赤枠
  quad(500, 260, 590, 350, 500, 440, 410, 350);
  fill(45, 75, 75);
  quad(500, 267, 583, 350, 500, 433, 417, 350);//ここまで枠
  //水滴を落とす
  speed+=kasokudo;
  Y+=speed;
  fill(70, 230, 205, 1);
  ellipse(500, 165+Y, 12, 12);
  int iSecondNew = second();
  if ( iSecondCurrent != iSecondNew )//1秒に1粒落ちる
  {
    iSecondCurrent = iSecondNew;
    Y=0;
    count=0;
  }
  if (207+Y>=550)//水滴が落ち始める座標
  {
    speed=0;
  }//1秒経つまで水滴を止める、ここまで水滴
  if (s<=30)//みずたまりの描画
  {
    triangle(500, 530, 500-s*(180/30), 530-s*(180/30), 500+s*(180/30), 530-s*(180/30));
  }
  if (s>=30)//
  {
    beginShape();
    vertex(500, 530);
    vertex(320, 350);
    vertex(320+(s-30)*(180/30), 350-(s-30)*(180/30));
    vertex(680-(s-30)*(180/30), 350-(s-30)*(180/30));
    vertex(680, 350);
    endShape(CLOSE);
  }//ここまでみずたまり

  //時間描画,時計回り
  strokeWeight(2);//線
  stroke(70, 230, 205, 1);
  line(660, 230, 780, 350);
  line(660, 470, 780, 350);
  line(340, 230, 220, 350);
  line(340, 470, 220, 350);
  if (0<=h&&h<=5)//右上0時から5時
  {
    line(660+h*80/5, 270+h*80/5, 700+h*80/5, 230+h*80/5);
    rectMode(CENTER);
    rect( 680+h*80/5, 250+h*80/5, 10, 10);
  }
  if (5<h&&h<=11)//右下6時から11時
  {
    line(740-(h-6)*80/5, 350+(h-6)*80/5, 780-(h-6)*80/5, 390+(h-6)*80/5);
    rectMode(CENTER);
    rect( 760-(h-6)*80/5, 370+(h-6)*80/5, 10, 10);
  }
  if (11<h&&h<=17)//左下12時から17時
  {
    line(340-(h-12)*80/5, 430-(h-12)*80/5, 300-(h-12)*80/5, 470-(h-12)*80/5);
    rectMode(CENTER);
    rect( 320-(h-12)*80/5, 450-(h-12)*80/5, 10, 10);
  }
  if (17<h&&h<=23)//左上18時から23時
  {
    line(260+(h-18)*80/5, 350-(h-18)*80/5, 220+(h-18)*80/5, 310-(h-18)*80/5);
    rectMode(CENTER);
    rect( 240+(h-18)*80/5, 330-(h-18)*80/5, 10, 10);
  }

  //目盛り
  strokeWeight(6);//水が満ちた後見える透けた赤四角
  stroke(225, 40, 40, 0.3);
  noFill();
  quad(500, 263, 587, 350, 500, 436, 413, 350);
  noStroke();
  fill(255-1.5*count, 70-1.5*count, 70-1.5*count);//点滅する赤丸達
  circle(500, 150, 6);
  circle(600, 250, 6);
  circle(700, 350, 6);
  circle(600, 450, 6);
  circle(500, 550, 6);
  circle(700, 230, 4);
  circle(780, 310, 4);
  circle(780, 390, 4);
  circle(700, 470, 4);
  circle(300, 470, 4);
  circle(220, 390, 4);
  circle(220, 310, 4);
  circle(300, 230, 4);
}
